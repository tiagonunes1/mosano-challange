{"ast":null,"code":"var _jsxFileName = \"/Users/tiagonunes/Documents/dev/mosano-challange/mosano-challange/src/components/List.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Message from \"./Message\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  _s();\n\n  let {\n    users,\n    currentUserName,\n    currentUserSurname\n  } = _ref;\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const Trigger = user => {\n    setShowMessage(true);\n    let age = new Date().getFullYear() - user.birthday.substr(0, 4);\n    let day = user.birthday.substr(8, 2);\n    let month = user.birthday.substr(5, 2);\n    setMessage(`Hello ${user.name} ${user.surname} from ${user.countries}. On ${day} of ${month} you will have ${age} years`);\n    setTimeout(() => {\n      setShowMessage(false);\n    }, 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"table-container\",\n    children: [showMessage && /*#__PURE__*/_jsxDEV(Message, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"birthday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => {\n              Trigger(user);\n            },\n            children: [user.name, \" \", user.surname]\n          }, user.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.countries\n          }, user.countries, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.birthday\n          }, user.birthday, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, user.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"user-name\",\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [currentUserName, \" \", currentUserSurname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"7QstairTGCn6UgBtS7RjC3ZMAS0=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","Message","List","users","currentUserName","currentUserSurname","showMessage","setShowMessage","message","setMessage","Trigger","user","age","Date","getFullYear","birthday","substr","day","month","name","surname","countries","setTimeout","map"],"sources":["/Users/tiagonunes/Documents/dev/mosano-challange/mosano-challange/src/components/List.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Message from \"./Message\";\n\nexport default function List({ users, currentUserName, currentUserSurname }) {\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const Trigger = (user) => {\n    setShowMessage(true);\n    let age = new Date().getFullYear() - user.birthday.substr(0, 4);\n    let day = user.birthday.substr(8, 2);\n    let month = user.birthday.substr(5, 2);\n    setMessage(\n      `Hello ${user.name} ${user.surname} from ${user.countries}. On ${day} of ${month} you will have ${age} years`\n    );\n    setTimeout(() => {\n      setShowMessage(false);\n    }, 5000);\n  };\n  return (\n    <div id=\"table-container\">\n      {/* {showMessage && <div id=\"message\" className=\"alert alert-info\" role=\"alert\">{message}</div>}      */}\n      {showMessage && <Message message={message} />}\n      <table>\n        <tbody>\n          <tr>\n            <th>name</th>\n            <th>country</th>\n            <th>birthday</th>\n          </tr>\n          {users.map((user) => (\n            <tr key={user.name}>\n              <td\n                key={user.name}\n                onClick={() => {\n                  Trigger(user);\n                }}\n              >\n                {user.name} {user.surname}\n              </td>\n              <td key={user.countries}>{user.countries}</td>\n              <td key={user.birthday}>{user.birthday}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div id=\"user-name\">\n        <strong>\n          {currentUserName} {currentUserSurname}\n        </strong>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,IAAT,OAA8D;EAAA;;EAAA,IAAhD;IAAEC,KAAF;IAASC,eAAT;IAA0BC;EAA1B,CAAgD;EAC3E,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMU,OAAO,GAAIC,IAAD,IAAU;IACxBJ,cAAc,CAAC,IAAD,CAAd;IACA,IAAIK,GAAG,GAAG,IAAIC,IAAJ,GAAWC,WAAX,KAA2BH,IAAI,CAACI,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAArC;IACA,IAAIC,GAAG,GAAGN,IAAI,CAACI,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAV;IACA,IAAIE,KAAK,GAAGP,IAAI,CAACI,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAZ;IACAP,UAAU,CACP,SAAQE,IAAI,CAACQ,IAAK,IAAGR,IAAI,CAACS,OAAQ,SAAQT,IAAI,CAACU,SAAU,QAAOJ,GAAI,OAAMC,KAAM,kBAAiBN,GAAI,QAD9F,CAAV;IAGAU,UAAU,CAAC,MAAM;MACff,cAAc,CAAC,KAAD,CAAd;IACD,CAFS,EAEP,IAFO,CAAV;EAGD,CAXD;;EAYA,oBACE;IAAK,EAAE,EAAC,iBAAR;IAAA,WAEGD,WAAW,iBAAI,QAAC,OAAD;MAAS,OAAO,EAAEE;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFlB,eAGE;MAAA,uBACE;QAAA,wBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,EAMGL,KAAK,CAACoB,GAAN,CAAWZ,IAAD,iBACT;UAAA,wBACE;YAEE,OAAO,EAAE,MAAM;cACbD,OAAO,CAACC,IAAD,CAAP;YACD,CAJH;YAAA,WAMGA,IAAI,CAACQ,IANR,OAMeR,IAAI,CAACS,OANpB;UAAA,GACOT,IAAI,CAACQ,IADZ;YAAA;YAAA;YAAA;UAAA,QADF,eASE;YAAA,UAA0BR,IAAI,CAACU;UAA/B,GAASV,IAAI,CAACU,SAAd;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YAAA,UAAyBV,IAAI,CAACI;UAA9B,GAASJ,IAAI,CAACI,QAAd;YAAA;YAAA;YAAA;UAAA,QAVF;QAAA,GAASJ,IAAI,CAACQ,IAAd;UAAA;UAAA;UAAA;QAAA,QADD,CANH;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eA0BE;MAAK,EAAE,EAAC,WAAR;MAAA,uBACE;QAAA,WACGf,eADH,OACqBC,kBADrB;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD;;GAlDuBH,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}